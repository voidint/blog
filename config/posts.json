{
  "posts": [
    {
      "content": "### 适用的controller\n- LSISAS3008\n- LSISAS3004\n\n### 名词解释\n- Controller:\n- IR:\n- Volume: 卷，基于物理驱动器通过创建冗余磁盘阵列所生成的虚拟磁盘。概念上等同于RAID冗余磁盘阵列。\n- Enclosure: 硬盘盒编号。\n- Bay: 即slot，指代硬盘盒的某个插槽。\n- HDD: Hard Disk Drive的缩写，即普通机械硬盘。\n- SSD: Solid State Drive的缩写，即固态硬盘。\n- SAS: 序列式SCSI（SAS：Serial Attached SCSI）是一种电脑集线的技术，其功能主要是作为周边零件的数据传输，例如：硬盘、CD-ROM等设备而设计的界面。\n- SATA: 串行ATA（Serial ATA: Serial Advanced Technology Attachment）是一种电脑总线，负责主板和大容量存储设备（如硬盘及光盘驱动器）之间的数据传输，主要用于个人电脑。\n\n### 语法\n```\nsas3ircu <controller_#> <command> <parameters>\n```\n\n### 通用参数\n- <controller_#>\n    controller编号是程序分配给PCI插槽上的RAID硬件的唯一编号。比如，某个设备上包含2块LSI SAS3008的RAID卡，那么编号0就代表这第一块RAID卡，而编号1就指代另一块。这个编号的取值范围是0~255之间的整数。\n\n- <Enclosure:Bay>\n    由硬盘盒编号(Enclosure)和插槽编号(Bay/Slot)组成的物理驱动器唯一标识。通过DISPLAY命令可以查看到此信息。\n\n### 退出码\n- 0: 命令执行成功。\n- 1: 错误的命令行参数或者操作失败。\n- 2: 未发现指定的adapter。\n\n### CREATE命令\n创建volume须准守以下规则:\n\n- 组成一个volume的多块磁盘，包括卷的热备盘在内，都必须是在同一个controller上。\n- 支持的RAID级别包括: RAID0、RAID1、RAID1E、RAID10。\n- 同一个controller上至多创建2个volume。\n- RAID级别与物理驱动器数量限制\n    - RAID0: Max=10; Min=2\n    - RAID1: Max=2; Min=2\n    - RAID1E: Max=10; Min=3\n    - RAID10: Max=10; Min=3\n- 每个controller上能创建1个或者2个hot spare disk。\n- 不允许跨SAS、SATA物理驱动器创建volume。\n- 不允许跨普通硬盘和固态硬盘创建volume。\n#### 语法\n```\nsas3ircu <controller_#> create <volume_type> <size> {<Enclosure:Bay>} [VolumeName] [noprompt]\n```\n#### 参数\n- <controller_#>: controller编号。\n- <volume_type>: volume类型。等价于RAID级别。可选值包括RAID0、RAID1、RAID1E、RAID10。\n- <size>: volume的容量大小，单位MB。MAX代表可用的最大容量值。\n- <Enclosure:Bay>:\n- [VolumeName]: 可选，volume名称。\n- [noprompt]: 可选，阻止在命令运行过程中产生的警告和交互式提示，即静默运行。\n\n### DELETE命令\n该命令用于删除指定controller下的所有的volume及其hot spare drives，但并不会对其它controller的配置参数产生任何影响。\n#### 语法\n```\nsas3ircu <controller_#> delete [noprompt]\n```\n#### 参数\n- <controller_#>: controller编号。\n- [noprompt]: 可选，阻止在命令运行过程中产生的警告和交互式提示，即静默运行。\n\n### DELETEVOLUME命令\n该命令用于删除指定controller下的指定volume及其hot spare drives，但并不会对其它controller的配置参数产生任何影响。如果某个hot spare对于剩余还未被删除的volume而言是不合适的，那么这个hot spare也会被删除。\n#### 语法\n```\nsas3ircu <controller_#> deletevolume <volumeID> [noprompt]\n```\n#### 参数\n- <controller_#>: controller编号。\n- <volumeID>: 待删除的volume ID。通过STATUS或者DISPLAY命令可以查看到volume ID相关的信息。\n- [noprompt]: 可选，阻止在命令运行过程中产生的警告和交互式提示，即静默运行。\n\n### DISPLAY命令\n该命令用于显示LSI SAS3 controller相关的配置信息，包括controller类型、固件版本、BIOS版本、volume信息、物理驱动器信息，以及enclosure。\n\n#### 语法\n```\nsas3ircu <controller_#> display [filename]\n```\n\n#### 参数\n- <controller_#>: controller编号。\n- [filename]: 可选，用于存储该命令输出的文件。\n\n#### 命令输出样例\n```\nAvago Technologies SAS3 IR Configuration Utility.\nVersion 15.00.00.00 (2016.11.21) \nCopyright (c) 2009-2016 Avago Technologies. All rights reserved. \n\nRead configuration has been initiated for controller 0\n------------------------------------------------------------------------\nController information\n------------------------------------------------------------------------\n  Controller type                         : SAS3008\n  BIOS version                            : 8.29.02.00\n  Firmware version                        : 12.00.02.00\n  Channel description                     : 1 Serial Attached SCSI\n  Initiator ID                            : 0\n  Maximum physical devices                : 255\n  Concurrent commands supported           : 4096\n  Slot                                    : 0\n  Segment                                 : 0\n  Bus                                     : 1\n  Device                                  : 0\n  Function                                : 0\n  RAID Support                            : Yes\n------------------------------------------------------------------------\nIR Volume information\n------------------------------------------------------------------------\nIR volume 1\n  Volume ID                               : 323\n  Status of volume                        : Okay (OKY)\n  Volume wwid                             : 04b796b93430a2a7\n  RAID level                              : RAID1\n  Size (in MB)                            : 857353\n  Boot                                    : Primary\n  Physical hard disks                     :\n  PHY[0] Enclosure#/Slot#                 : 2:0\n  PHY[1] Enclosure#/Slot#                 : 2:1\n------------------------------------------------------------------------\nPhysical device information\n------------------------------------------------------------------------\nInitiator at ID #0\n\nDevice is a Hard disk\n  Enclosure #                             : 2\n  Slot #                                  : 0\n  SAS Address                             : 5000c50-0-9f3e-0741\n  State                                   : Optimal (OPT)\n  Size (in MB)/(in sectors)               : 858483/1758174767\n  Manufacturer                            : SEAGATE \n  Model Number                            : ST900MM0168     \n  Firmware Revision                       : N003\n  Serial No                               : W4009ZLH0000E739G08J\n  Unit Serial No(VPD)                     : W4009ZLH0000E739G08J\n  GUID                                    : 5000c5009f3e0743\n  Protocol                                : SAS\n  Drive Type                              : SAS_HDD\n\nDevice is a Hard disk\n  Enclosure #                             : 2\n  Slot #                                  : 1\n  SAS Address                             : 5000c50-0-9f40-be21\n  State                                   : Optimal (OPT)\n  Size (in MB)/(in sectors)               : 123/1758174767\n  Manufacturer                            : SEAGATE \n  Model Number                            : ST900MM0168     \n  Firmware Revision                       : N003\n  Serial No                               : S403EKZH0000E7400Z53\n  Unit Serial No(VPD)                     : S403EKZH0000E7400Z53\n  GUID                                    : 5000c5009f40be23\n  Protocol                                : SAS\n  Drive Type                              : SAS_SSD\n\nDevice is a Enclosure services device\n  Enclosure #                             : 2\n  Slot #                                  : 36\n  SAS Address                             : 500e004-a-aaaa-aa3e\n  State                                   : Standby (SBY)\n  Manufacturer                            : 12G SAS\n  Model Number                            : Expander        \n  Firmware Revision                       : RevB\n  Serial No                               : \n  Unit Serial No(VPD)                     : 500e004aaaaaaa3e\n  GUID                                    : N/A\n  Protocol                                : SAS\n  Device Type                             : Enclosure services device\n------------------------------------------------------------------------\nEnclosure information\n------------------------------------------------------------------------\n  Enclosure#                              : 1\n  Logical ID                              : 5a0086f5:dc780000\n  Numslots                                : 8\n  StartSlot                               : 0\n  Enclosure#                              : 2\n  Logical ID                              : 500e004a:aaaaaa3e\n  Numslots                                : 29\n  StartSlot                               : 0\n------------------------------------------------------------------------\nSAS3IRCU: Command DISPLAY Completed Successfully.\nSAS3IRCU: Utility Completed Successfully.\n```\n\n- IR Volume State可选值\n    - Okay(OKY): 活跃、有效。如果配置的RAID级别能够提供一定的数据保护，那么此时用户数据就是受保护状态。\n    - Degraded(DGD): 活跃、有效。由于配置已经发生了改变或者物理驱动器中某些处于不可用状态，用户数据实际上处于不完全受保护状态。\n    - Failed(FLD): 失败。\n    - Missing(MIS): 缺失。\n    - Initializing(INIT): 初始化中。\n    - Online(ONL): 已上线。\n- Physical device State可选值\n    - Online(ONL): 该物理驱动器是可用的并且已经是构成某个volume的一部分了。\n    - HotSpare(HSP): 该物理驱动器已经处于热备状态。一旦对应的volume中有物理驱动器发生故障不可用，该物理驱动器就会顶替发生故障的物理驱动器。\n    - Ready(RDY): 该物理驱动器已经处于预备(ready)状态，可以随时被当作一个普通的物理驱动器被使用，可以被分配到某个volume或者热备盘池(hot spare pool)。\n    - Available(AVL): 该物理驱动器可能并不处于预备(ready)状态，并且不适合作为volume的一个物理驱动器，也不适合作为热备盘池中的一员。\n    - Failed(FLD): 该物理驱动器发生故障或者已经下线。\n    - Missing(MIS): 该物理驱动器已经被移除或者处于无响应状态。\n    - Standby(SBY): 该设备不是一个硬盘设备。\n    - OutofSync(OSY): 该物理驱动器是某个volume的一部分，但是它并没有与同样是volume一部分的其他物理驱动器进行同步。\n    - Degraded(DGD): 该物理驱动器时某个volume的一部分并且处于降级(degraded)状态。\n    - Rebuilding(RBLD): 该物理驱动器时某个volume的一部分并且处于重建(rebuilding)状态。\n    - Optimal(OPT): 该物理驱动器时某个volume的一部分并且处于最优(optimal)状态。\n- Physical device的Drive Type属性可选值\n    - SAS_HDD: 物理驱动器是SAS普通机械硬盘。\n    - SATA_HDD: 物理驱动器是SATA普通机械硬盘。\n    - SAS_SSD: 物理驱动器是SAS固态硬盘。\n    - SATA_SSD: 物理驱动器是SATA固态硬盘。\n- Physical device的Protocol属性可选值\n    - SAS: 物理驱动器支持SAS协议。\n    - SATA: 物理驱动器支持SATA协议。\n\n### HOTSPARE命令\n该命令用来给热备池中添加或者删除一个物理驱动器。待添加的物理驱动器存储容量不能小于volume中各个物理驱动器存储容量最小的那个物理驱动器的存储容量。若想要确定各个物理驱动器的存储容量等信息，请参考DISPLAY命令。\n\n创建热备盘时须准守以下规则:\n- 创建热备盘前至少已经存在一个RAID级别为RAID 1、RAID 10、RAID 1E的volume。因为RAID 0不具备数据冗余特性，因此无法为此创建热备盘。\n- 可以为状态是inactive的volume创建热备盘。\n- 对于HDD而言，若当前controller上的所有volume使用的是SATA磁盘，那么可以添加SAS的热备盘。若当前controller上的所有volume使用的是SAS磁盘，则无法再添加SATA的热备盘。\n- 对于SSD而言，只要RAID卡固件允许，允许为SATA的volume添加SAS的热备盘，也可以为SAS的volume添加SATA的热备盘。\n- 每个controller最多添加2块热备盘。\n- SSD可以作为HDD类型的volume的热备盘，HDD不可以作为SSD类型volume的热备盘。\n\n#### 语法\n```\nsas3ircu <controller_#> hotspare [delete] <Enclosure:Bay>\n```\n\n#### 参数\n- <controller_#>: controller编号。\n- <Enclosure:Bay>: 硬盘盒编号+物理驱动器编号，可以唯一标识一块物理驱动器。\n- [delete]: 可选。加上此参数意味着执行的是删除热备盘的操作，反之，则是添加热备盘操作。\n\n### STATUS命令\n该命令会显示当前已经存在volume，以及当前还在进行中的操作的状态。\n\n#### 语法\n```\nsas3ircu <controller_#> status\n```\n\n#### 参数\n- <controller_#>: controller编号。\n\n### LIST命令\n该命令显示当前系统中的所有controller及其controller index组成的列表。\n\n#### 语法\nsas3ircu list\n\n### 参考\n- [SAS-3 Integrated RAID Configuration Utility (SAS3IRCU)](https://docs.broadcom.com/docs/12353382)\n- [LSI SAS3008文档](https://support.huawei.com/enterprise/zh/doc/EDOC1000004345/b4b05091#it_server_sas3008_700035)\n- [Disk Enclosure](https://zh.wikipedia.org/wiki/%E7%A1%AC%E7%9B%98%E7%9B%92)\n- [HDD](https://zh.wikipedia.org/wiki/%E7%A1%AC%E7%9B%98)\n- [SSD](https://zh.wikipedia.org/wiki/%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98)\n- [SAS](https://zh.wikipedia.org/wiki/%E4%B8%B2%E5%88%97SCSI)\n- [SATA](https://zh.wikipedia.org/wiki/SATA)\n\n\n\n\n",
      "data": {
        "title": "SAS3IRCU配置LSI SAS3系列RAID卡",
        "date": "2020-02-25 16:43:06",
        "tags": [
          "RAID",
          "SAS3IRCU"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/sas3ircu.jpg",
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "sas3ircu"
    },
    {
      "content": "### 场景描述\n假设你创建了一个文件，并写入了一些内容，然后通过git add和git commit将此变更提交。提交之后才发现这个文件中少了一些内容，此时有两个选择摆在你面前：\n\n- 将文件内容补全，然后和之前一样git add、git commit。显然，你可以通过git log看到这两条commit记录。\n- 回到过去，修改上一次提交的那个文件。如此一来，你的commit记录只会有一条。对于一些有代码洁癖并且看中git commit记录的程序员，这点很重要，特别是在开源项目中。\n\n### 场景再现\n初始化git仓库\n\n```shell\n$ mkdir test && cd test && git init\n```\n\n第一次commit内容\n\n```shell\n$ echo 'Hello world' > README.md\n$ git add .\n$ git commit -m \"Add README.md\"\n$ git log --oneline\nc56f680 Add README.md\n```\n\n修改文件内容并合并到上一次的commit变更当中\n\n```shell\n$ echo 'Hello voidint' >> README.md\n$ git add .\n$ git commit --amend --no-edit\n$ git log --oneline\neb6c8cb Add README.md // hash值发生了变化\n```\n\n可以看到，在执行git commit --amend --no-edit之后，hash值由c56f680变成了eb6c8cb，但是message内容并没有发生变化，并且最重要的是只有一条commit记录。\n\n如果要修改上一条的message，那么去掉--no-edit选项即可，git commit --amend -m \"xxxx\"。同理，commit记录同样只会有一条。",
      "data": {
        "title": "git commit message后悔药",
        "date": "2020-02-25 16:33:19",
        "tags": [
          "git"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/git-commit-amend.jpg",
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "git-commit-amend"
    },
    {
      "content": "从docker hub拉取的MySQL官方docker镜像，启动MySQL容器后，执行`select now()`语句，发现显示的时间与我宿主机的时间不一致且相差8小时。显然，需要重置MySQL的时区，将时区设置与宿主机保持一致，即东八区。\n\n### 如何为MySQL设置时区？\n[MySQL 5.7官方文档](https://dev.mysql.com/doc/refman/5.7/en/time-zone-support.html)中提到了多种设置时区的方案，我们这里仅关注配置文件（MySQL官方称之为[Option Files](https://dev.mysql.com/doc/refman/5.7/en/option-files.html)）的方案。\n\n#### 配置文件中修改时区\n- 配置项default-time-zone及取值\n    依据文档可以通过在配置文件中增加default-time-zone='timezone'的配置项来修改时区。配置值的取值遵循以下规则：\n\n    >- The value 'SYSTEM' indicates that the time zone should be the same as the system time zone.\n    >\n    >- The value can be given as a string indicating an offset from UTC, such as '+10:00' or '-6:00'.\n    >\n    >- The value can be given as a named time zone, such as 'Europe/Helsinki', 'US/Eastern', or 'MET'. Named time zones can be used only if the time zone information tables in the mysql database have been created and populated.\n\n    我们选择第二种方式，通过UTC的偏移量来表示东八区，+8:00意味着在零时区的基础上往东偏移8个时区。\n- group\n    官方文档中描述了配置文件的语法，包括注释、组、选项名、选项值等。其中组（group）是与我们当前遇到的问题息息相关的东西。配置项需要放置在正确的group下，官方表述如下：\n\n    > If an option group name is the same as a program name, options in the group apply specifically to that program.\n    > For example, the [mysqld] and [mysql] groups apply to the mysqld server and the mysql client program, respectively.\n\n由于配置项default-time-zone是为了让MySQL Server调整默认时区，并结合上面有关group的表述，不难得出一个结论：default-time-zone配置项应该放置在名为[mysqld]的group下。\n\n```shell\n[mysqld]\ndefault-time_zone = '+8:00'\n```\n\n#### 配置文件位置\n既然已经明确了通过修改配置文件来达到重置MySQL时区的目的，那么修改后的配置文件放哪儿呢？这是首先面临的一个问题。好在MySQL官方文档中已经告诉我们配置文件的读取顺序。\n\n| **File Name**       | **Purpose**                                     |\n| ------------------- | ----------------------------------------------- |\n| /etc/my.cnf         | Global options                                  |\n| /etc/mysql/my.cnf   | Global options                                  |\n| *SYSCONFDIR*/my.cnf | Global options                                  |\n| $MYSQL_HOME/my.cnf  | Server-specific options (server only)           |\n| defaults-extra-file | The file specified with `--defaults-extra-file` |\n| ~/.my.cnf           | User-specific options                           |\n| ~/.mylogin.cnf      | User-specific login path options (clients only) |\n\n再尝试查看MySQL的docker容器中的配置文件，docker run --rm mysql:5.7 cat /etc/mysql/my.cnf，我们看到了容器中的配置文件内容如下：\n\n```\n# Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; version 2 of the License.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA\n\n!includedir /etc/mysql/conf.d/\n!includedir /etc/mysql/mysql.conf.d/\n```\n\n\n这下这个疑问终于有了答案，我们可以将自定义的配置文件想办法放入容器中的/etc/mysql/conf.d/目录（放在/etc/mysql/mysql.conf.d/目录当然也同样OK）。\n\n注意：在*nix系统下使用!includedir指令指定的配置文件目录下的配置文件扩展名必须是.cnf，在Windows系统下的扩展名可以是.ini或者.cnf。\n\n#### 启动MySQL容器\n\n```shell\n$ docker run  -d --name mysql5.7 \\\n    -v /Users/voidint/dockerV/mysql/5.7/conf:/etc/mysql/conf.d \\\n    -e MYSQL_ROOT_PASSWORD='abc#123' \\\n    -p 3306:3306\\\n    mysql:5.7\n```\n\n参考MySQL官方docker镜像的说明，我们将上面步骤准备好的MySQL配置文件放置在/Users/voidint/dockerV/mysql/5.7/conf目录下，并通过docker -v选项将宿主机上的配置文件目录挂载到容器中的/etc/mysql/conf.d目录。这样在容器启动时就能读取到我们自定义的配置文件，时区配置也就生效了。\n\n容器启动后，通过MySQL客户端连接上MySQL，再次执行select now()语句以验证MySQL的时区是否与宿主机时区保持一致。\n\n### 参考\n- [MySQL Server Time Zone Support](https://dev.mysql.com/doc/refman/5.7/en/time-zone-support.html)\n- [Using Option Files](https://dev.mysql.com/doc/refman/5.7/en/option-files.html)\n- [MySQL Docker镜像](https://hub.docker.com/_/mysql)\n\n\n\n\n",
      "data": {
        "title": "容器内MySQL时区调整",
        "date": "2020-02-25 16:08:07",
        "tags": [
          "MySQL",
          "timezone",
          "docker"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/mysql-timezone.jpg",
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "mysql-timezone"
    },
    {
      "content": "我在自己的mac上安装了docker，并在docker中运行了mysql5.6容器。启动容器的方式大致如下：\n```shell\n$ docker run --name mydb -d -p 3306:3306 -v /Users/voidint/dockerV/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=xxxxx mysql:5.6\n```\n\nmysql服务正常启动之后，我想通过客户端连接此服务。于是，我顺理成章地在终端敲下了这样的命令\n```shell\n$ mysql -u root -p\nEnter password:\nERROR 2002 (HY000): Can't connect to local MySQL server through socket '/tmp/mysql.sock' (2)\n```\n\n非常意外，居然报错了。我记得以前都是这样敲的呀？怎么换成跑在docker里就行不通了？不科学！\n\n```shell\n$ mysql -h localhost -uroot -p\nEnter password:\nERROR 2002 (HY000): Can't connect to local MySQL server through socket '/tmp/mysql.sock' (2)\n```\n\n加上`-h`选项还是不行，气急败坏。气归气，问题还是要解决的，那就查查资料。然后，看到了这篇，在粗粗浏览过之后，发现有人建议用`-h 127.0.0.1`。\n\n```shell \n$ mysql -h 127.0.0.1 -u root -p \nEnter password:\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 3823\nServer version: 5.6.35 MySQL Community Server (GPL)\n\nCopyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql>\n```\n\n试过之后，发现效果立竿见影。这简直颠覆了我的既有观念！\n\n- 难道localhost和127.0.0.1不是同一个东西？OMG！\n- 那个socket文件/tmp/mysql.sock又是怎么一回事，指定了127.0.0.1怎么就正常了？\n\n在查阅了一些资料之后，终于对于这几个问题有了稍深入的理解：\n\n### localhost和127.0.0.1的区别\n- localhost和127.0.0.1，前者是域名，后者是IP地址中特殊的一类回还地址。\n- 许多时候localhost和127.0.0.1给人感觉是等价的，是由于在多数系统的/etc/hosts文件中，两者存在映射关系。\n- 本机上的服务，如果通过localhost访问，可以不经过网卡，并且不受防火墙的限制。如果不经过网卡，那客户端和服务端要如何通信？答案就是socket。比如上面例子中的/tmp/mysql.sock。也因为不需要经过网卡，不需要TCP/IP协议的层层封包和层层解包过程，性能上会更出色一些。\n- 本机上的服务，如果通过127.0.0.1访问，需要经过网卡，也可能受到防火墙限制。\n\n### 参考资料\n- https://hub.docker.com/_/mysql/\n- http://stackoverflow.com/questions/11657829/error-2002-hy000-cant-connect-to-local-mysql-server-through-socket-var-run\n- http://blog.onlycatch.com/post/7e371ca28621\n- http://i.joymvp.com/%E6%8A%80%E6%9C%AF/routing-traffic-localhost.html\n",
      "data": {
        "title": "为什么mysql -h localhost无法登录了？",
        "date": "2020-02-25 15:56:49",
        "tags": [
          "MySQL",
          "localhost"
        ],
        "published": true,
        "hideInList": false,
        "feature": "/post-images/mysql-login-localhost.png",
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "mysql-login-localhost"
    }
  ],
  "tags": [
    {
      "name": "RAID",
      "slug": "PAYpxEtAC",
      "used": true
    },
    {
      "name": "SAS3IRCU",
      "slug": "8ChdujAc0W",
      "used": true
    },
    {
      "name": "git",
      "slug": "JFSNzrvJI",
      "used": true
    },
    {
      "name": "timezone",
      "slug": "r6k_9Mi2R",
      "used": true
    },
    {
      "name": "docker",
      "slug": "EBKzSjP46S",
      "used": true
    },
    {
      "name": "MySQL",
      "slug": "upBZVsJSS",
      "used": true
    },
    {
      "name": "localhost",
      "slug": "y6nbpIRFho",
      "used": true
    },
    {
      "name": "linux",
      "slug": "qFpL6WSF3",
      "used": false
    },
    {
      "name": "namespaces",
      "slug": "gX1A_Kwp4f",
      "used": false
    },
    {
      "name": "Gridea",
      "slug": "7dumky1lK",
      "used": false
    }
  ],
  "menus": [
    {
      "link": "/",
      "name": "首页",
      "openType": "Internal"
    },
    {
      "link": "/archives",
      "name": "归档",
      "openType": "Internal"
    },
    {
      "link": "/tags",
      "name": "标签",
      "openType": "Internal"
    },
    {
      "link": "/post/about",
      "name": "关于",
      "openType": "Internal"
    }
  ]
}